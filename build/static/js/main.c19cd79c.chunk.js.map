{"version":3,"sources":["context/context.jsx","components/Modal/styles.js","components/Modal/index.js","components/ImgContainer/styles.js","components/ImgContainer/index.js","components/ListOfImages/index.js","App.js","reportWebVitals.js","index.js"],"names":["ImgArrayContext","createContext","ModalContainer","styled","div","Content","Modal","setImgArray","useContext","onClick","fetch","then","response","json","data","results","catch","err","console","log","ImgWrapper","Img","img","ImgContainer","imgUrl","src","ListOfImages","imgArray","className","map","image","id","App","useState","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,EAAkBC,wBAAc,M,o3BCAtC,IAAMC,EAAiBC,IAAOC,IAAV,KA+BdC,EAAUF,IAAOC,IAAV,KC7BPE,EAAQ,WAAO,IAClBC,EAAgBC,qBAAWR,GAA3BO,YAeR,OACE,eAACL,EAAD,WACE,cAACG,EAAD,oCACA,wBAAQI,QAdc,WACxBC,MAHa,8CAIVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLP,EAAYO,EAAKC,YAElBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAOd,8B,g5BCrBC,IAAMG,EAAajB,IAAOC,IAAV,KAwBViB,EAAMlB,IAAOmB,IAAV,KCvBHC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7B,OACE,cAACJ,EAAD,UACE,cAACC,EAAD,CAAKI,IAAKD,OCAHE,G,MAAe,WAAO,IAAD,EACElB,qBAAWR,GAArC2B,EADwB,EACxBA,SAAUpB,EADc,EACdA,YAElB,OACE,sBAAKqB,UAAU,gBAAf,UACGD,EAASE,KAAI,SAACP,GAAD,OACZ,cAAC,EAAD,CAA2BE,OAAQF,EAAIQ,OAApBR,EAAIS,OAEzB,wBAAQtB,QAAS,kBAAMF,EAAY,OAAnC,wB,MCMSyB,MAZf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNN,EADM,KACIpB,EADJ,KAGb,OACE,qBAAKqB,UAAU,MAAf,SACE,cAAC5B,EAAgBkC,SAAjB,CAA0BC,MAAO,CAAER,WAAUpB,eAA7C,SACGoB,EAAW,cAAC,EAAD,IAAmB,cAAC,EAAD,SCFxBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c19cd79c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const ImgArrayContext = createContext(null);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  height: 300px;\r\n  width: 400px;\r\n  border-radius: 10%;\r\n  margin: auto auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  background-color: white;\r\n  -webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n\r\n  & button {\r\n    background-color: green;\r\n    padding: 1rem 2rem;\r\n    font-size: 1.2rem;\r\n    border-radius: 1rem;\r\n    border: none;\r\n    color: white;\r\n    outline: none;\r\n    transition: transform 0.3s;\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-transform: capitalize;\r\n  font-size: 1.6rem;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { ImgArrayContext } from \"../../context/context\";\r\nimport { ModalContainer, Content } from \"./styles\";\r\n\r\nexport const Modal = () => {\r\n  const { setImgArray } = useContext(ImgArrayContext);\r\n\r\n  const apiUrl = \"https://rickandmortyapi.com/api/character/\";\r\n\r\n  const handleButtonClick = () => {\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setImgArray(data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <Content>Imagenes Rick & Morty</Content>\r\n      <button onClick={handleButtonClick}>Ver Imagenes</button>\r\n    </ModalContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImgWrapper = styled.div`\r\n  position: relative;\r\n  justify-self: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 2rem 2rem;\r\n  border-radius: 1rem;\r\n  transition: all 0.3s;\r\n  -webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n\r\n  &:hover {\r\n    transform: translateY(-10px);\r\n    -webkit-box-shadow: 0px 20px 10px 0px rgba(0, 0, 0, 0.75);\r\n    -moz-box-shadow: 0px 20px 10px 0px rgba(0, 0, 0, 0.75);\r\n    box-shadow: 0px 20px 10px 0px rgba(0, 0, 0, 0.75);\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  height: 100%;\r\n  object-fit: cover; //Para que la imagen se ajuste\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { ImgWrapper, Img } from \"./styles\";\r\n\r\nexport const ImgContainer = ({ imgUrl }) => {\r\n  return (\r\n    <ImgWrapper>\r\n      <Img src={imgUrl} />\r\n    </ImgWrapper>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ImgArrayContext } from \"../../context/context\";\r\nimport { ImgContainer } from \"../ImgContainer\";\r\n\r\nimport \"./main.css\";\r\n\r\nexport const ListOfImages = () => {\r\n  const { imgArray, setImgArray } = useContext(ImgArrayContext);\r\n\r\n  return (\r\n    <div className=\"img-container\">\r\n      {imgArray.map((img) => (\r\n        <ImgContainer key={img.id} imgUrl={img.image} />\r\n      ))}\r\n      <button onClick={() => setImgArray(null)}>Atras</button>\r\n    </div>\r\n  );\r\n};\r\n","import { Modal } from \"./components/Modal\";\r\nimport { ListOfImages } from \"./components/ListOfImages\";\r\n\r\nimport { ImgArrayContext } from \"./context/context\";\r\n\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [imgArray, setImgArray] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ImgArrayContext.Provider value={{ imgArray, setImgArray }}>\r\n        {imgArray ? <ListOfImages /> : <Modal />}\r\n      </ImgArrayContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//oprimo boton escondo modal muestra imagenes\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}